#!/usr/bin/env bash
set -eo pipefail
trap "exit" 2

RED='\033[0;31m'
NC='\033[0m'
script_name="$(basename "${0}")"
env_repo="partner-environment"
current_repo="$(basename "$(git --git-dir="./.git" remote get-url origin 2> /dev/null)")"
if [[ "${current_repo}" != "${env_repo}"* ]]
then
    printf "${RED}error:${NC} ${script_name} expected to be ran from root of the environment\n"
    exit 1
fi

HELP=$(cat <<EOF
Usage: ./install [options]

install must be run from the root of the environment.

Options:
    -e, --elk                        Set up ELK stack
    -s, --sentry                     Set up Sentry
EOF
)

SERVICES=('')

setup_elastic_stack=false
setup_sentry=false
while [[ $# -gt 0 ]]
do
  arg="$1"
  case $arg in
    -e|--elk)
    setup_elastic_stack=true
    SERVICES+=('-e')
    shift
    ;;
    -s|--sentry)
    setup_sentry=true
    SERVICES+=('-s')
    shift
    ;;
    -h |--help | *)
      printf "$HELP\n"
      exit 1
    ;;
  esac
done

source .env
PLACE_DOMAIN=${PLACE_DOMAIN:="localhost:8443"}
PLACE_EMAIL=${PLACE_EMAIL:="support@place.tech"}
PLACE_PASSWORD=${PLACE_PASSWORD:="development"}

echo "=== Generating secrets..."
./scripts/generate-secrets

echo "=== Bringing up services..."
./scripts/start-services ${SERVICES[@]} || (printf "\nfailed to start services\n" && exit 1)

echo "=== Configuring InfluxDB..."
./scripts/init-influxdb || (printf "\nFailed to configure InfluxDB." && exit 1)

if [[ $setup_sentry == "true" ]]
then
    echo "=== Setting up sentry..."
    ./scripts/setup-sentry.sh
    echo -e "\n=== Sentry setup complete. Login to http://$PLACE_DOMAIN on port 8989 with"
    echo "support@place.tech:development"
else
    echo "=== To setup sentry, run \`./scripts/setup-sentry.sh\`"
fi

if [[ $setup_elastic_stack == "true" ]]
then
    ./scripts/start-elastic-stack.sh
else
    echo "=== To setup elastic stack run 'docker-compose up -d' in monitor-host directory."
fi

sleep 5

echo "=== Running init container"
./scripts/run-init-container

echo "=== Setting up Staff API..."
PLACE_DOMAIN=placeos.local ./scripts/run-init-container

echo -e "\n=== Setup complete. Login to https://$PLACE_DOMAIN/backoffice/ with"
echo "$PLACE_EMAIL:$PLACE_PASSWORD"
